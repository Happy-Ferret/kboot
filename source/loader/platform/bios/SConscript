#
# Copyright (C) 2014 Alex Smith
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

Import('config', 'defaults', 'env')
from util import FeatureSources

sources = FeatureSources(config, [
    'bios.S',
    'console.c',
    'platform.c',
    'start.S',
])

# Set the linker script path.
env['LDSCRIPT'] = env.LDScript('link.ld', 'link.ld.in')

# Build the stage 1 loaders.
env.LDScript('stage1/stage1.ld', 'stage1/stage1.ld.in')
stage1s = ['cdboot']
for f in stage1s:
    # Build an ELF image.
    linkflags = env['LINKFLAGS'] + ['-Wl,-T,${TARGET.dir}/stage1.ld', '-Wl,-N']
    target = env.Program('stage1/%s.elf' % (f), 'stage1/%s.S' % (f), LINKFLAGS = linkflags)
    Depends(target, File('stage1/stage1.ld'))

    # Create a disassembly.
    env.AddPostAction(target,
        Action('$OBJDUMP -d -m i386 -M i8086 $TARGET > ${TARGET.base}.lst', None))

    # Create the final stripped binary.
    target = env.Command('stage1/%s.bin' % (f), target,
        Action('$OBJCOPY -O binary --strip-all $SOURCE $TARGET', '$GENCOMSTR'))

    defaults.append(target)

# Build the final loader binary.
loader = env.Command(env['OUTDIR'].File('loader'), env['LOADER'],
    Action('$OBJCOPY -O binary --strip-all $SOURCE $TARGET', '$GENCOMSTR'))
defaults.append(loader)

# Create CD/PXE boot images by concatenating the boot sector with the loader.
target = env.Command(env['OUTDIR'].File('cdboot.img'), ['stage1/cdboot.bin', loader],
    Action('cat ${SOURCES[0]} ${SOURCES[1]} > $TARGET', '$GENCOMSTR'))
defaults.append(target)

# Copy the disk boot sectors to the output directory.
# TODO

Return('sources')
